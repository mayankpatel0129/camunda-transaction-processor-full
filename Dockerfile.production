# Multi-stage Docker build for high-performance transaction processor
# Optimized for 1000s TPS with minimal resource usage

# Build stage
FROM openjdk:17-jdk-slim as builder

WORKDIR /app
COPY pom.xml .
COPY src ./src

# Install Maven
RUN apt-get update && apt-get install -y maven && rm -rf /var/lib/apt/lists/*

# Build the application
RUN mvn clean package -DskipTests

# Production stage
FROM openjdk:17-jre-slim

# Install necessary packages for production monitoring
RUN apt-get update && \
    apt-get install -y \
    curl \
    wget \
    htop \
    net-tools \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Create application user for security
RUN groupadd -r txprocessor && useradd -r -g txprocessor txprocessor

# Create application directories
RUN mkdir -p /app/logs /app/tmp /app/config && \
    chown -R txprocessor:txprocessor /app

WORKDIR /app

# Copy application JAR from builder stage
COPY --from=builder /app/target/transaction-processor-1.0.0.jar app.jar
COPY --chown=txprocessor:txprocessor start-optimized.sh .

# Make startup script executable
RUN chmod +x start-optimized.sh

# Create optimized JVM configuration for containers
ENV JAVA_OPTS="-server \
    -Xms4g \
    -Xmx8g \
    -Xmn2g \
    -XX:MetaspaceSize=512m \
    -XX:MaxMetaspaceSize=512m \
    -XX:+UseG1GC \
    -XX:G1HeapRegionSize=32m \
    -XX:MaxGCPauseMillis=50 \
    -XX:G1NewSizePercent=20 \
    -XX:G1MaxNewSizePercent=40 \
    -XX:+G1UseAdaptiveIHOP \
    -XX:+UseBiasedLocking \
    -XX:BiasedLockingStartupDelay=0 \
    -XX:+OptimizeStringConcat \
    -XX:+UseFastAccessorMethods \
    -XX:+UseCompressedOops \
    -XX:+UseCompressedClassPointers \
    -XX:+TieredCompilation \
    -XX:TieredStopAtLevel=4 \
    -XX:+UseCodeCacheFlushing \
    -XX:ReservedCodeCacheSize=512m \
    -XX:InitialCodeCacheSize=128m \
    -XX:+UseNUMA \
    -XX:+UseThreadPriorities \
    -XX:ThreadPriorityPolicy=1 \
    -XX:+UseLargePages \
    -XX:LargePageSizeInBytes=2m \
    -Djava.net.preferIPv4Stack=true \
    -Djava.awt.headless=true \
    -Dsun.net.useExclusiveBind=false \
    -Djava.security.egd=file:/dev/./urandom \
    -Dspring.profiles.active=production,docker"

# Environment variables for production
ENV SPRING_PROFILES_ACTIVE=production,docker
ENV SERVER_PORT=8080
ENV MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,prometheus
ENV MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=when_authorized

# Expose ports
EXPOSE 8080 8081

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/transaction-processor/actuator/health || exit 1

# Switch to non-root user
USER txprocessor

# Use optimized startup script
CMD ["java", "-jar", "app.jar"]